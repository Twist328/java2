;arraySort
<input> 10 178 13 1 33 99 2 8 52 885 78

load 
store 1 ; с какого инд. начинается массив
read 2 ; кол-во чисел в массиве
add 2
sub =2
store 8 ; индекс последнего элемента, 8 = 1 + 2 - =2
load =0
store 3 ; индекс элемента

read_to_array:
load 2
jz exit
store 4 ; итератор, 4 = 2
load 1
store 5 ; (*5) - сохраняем в, 5 = 1
jmp read_to_array_now
read_to_array_loop:
load 5
add =1
store 5 ; 5 = 5 + =1
read_to_array_now:
read *5
load 4
sub =1
store 4 ; 4 = 4 - =1
jgtz read_to_array_loop

check_less:
load 2
sub =1
jgtz find_min
load 1
sub =1
store 7
jmp out_end


find_min:
load 1
add 3
store 6 ; *6 - минимальный элемент, 6 = 1 + 3
store 7 ; *7 - минимальный элемент, 7 = 6
add =1
store 5 ; *5 - где ищем, 5 = 6 + =1
load 2
sub 3
sub =1
store 4 ; 4 - итератор, 4 = 2 + 3 - =1
jmp find_min_now
find_min_loop:
load 5
add =1
store 5 ; 5 = 5 + =1
find_min_now:
load *5
sub *6
jgtz find_min_big
; найден меньший элемент
load 5
store 6 ; 6 = 5
find_min_big:
load 4
sub =1
store 4 ; 4 = 4 - =1
jgtz find_min_loop
; если найден мин
load 7
sub 6
jz out_to_iterate
; меняем элементы местами
load *6
store 4
load *7
store *6
load 4
store *7

out_to_iterate:
write *7
load 3
add =1
store 3 ; 3 = 3 + =1
load 8
sub 7
jgtz find_min

out_end:
load 7
add =1
write *0

exit:
halt